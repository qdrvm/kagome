name: Run test on linux mac

on:
  push:
    branches: [ master ]
  pull_request:

env:
  BUILD_DIR: build
  BUILD_TREADS: 2
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  MacOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install
      run: ./housekeeping/macos/dependency.sh
    - name: build
      env:
        BUILD_TREADS: 4
        DEVELOPER_DIR: /Applications/Xcode_11.app/Contents/Developer
        CFLAGS: "-I${DEVELOPER_DIR}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
        CXXFLAGS: "-isysroot${DEVELOPER_DIR}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
      run: ./housekeeping/makeBuild.sh  -DCOVERAGE=OFF -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/cxx17.cmake

  Linux:
      strategy:
        matrix:
          options:
           - name: "Linux: gcc-9 ASAN No Toolchain"
             run: ./housekeeping/makeBuild.sh -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/gcc-9_cxx17.cmake -DASAN=ON
           - name: "Linux: clang-8 TSAN"
             run: ./housekeeping/makeBuild.sh -DCMAKE_TOOLCHAIN_FILE=cmake/san/clang-8_cxx17_tsan.cmake
           - name: "Linux: clang-8 UBSAN"
             run: ./housekeeping/makeBuild.sh -DCMAKE_TOOLCHAIN_FILE=cmake/san/clang-8_cxx17_ubsan.cmake
      name: "${{ matrix.options.name }}"
      runs-on: ubuntu-latest
      container: soramitsu/kagome-dev:8
      steps:
        - uses: actions/checkout@v2
        - name: "${{ matrix.options.name }}"
          run: "${{ matrix.options.run }}"

  clang-tidy:
      name: "Linux: clang-tidy"
      runs-on: ubuntu-latest
      container: soramitsu/kagome-dev:8
      steps:
        - uses: actions/checkout@v2
        - name: clang-tidy
          env:
            BUILD_TARGET: generated
          run: |
            ./housekeeping/makeBuild.sh
            ./housekeeping/clang-tidy.sh ${BUILD_DIR}
  coverage:
      name: "Linux: gcc-8 coverage/sonar"
      runs-on: ubuntu-latest
      container: soramitsu/kagome-dev:8
      steps:
        - uses: actions/checkout@v2
        - name: makeBuild
          env:
            BUILD_TARGET: ctest_coverage
          run: |
            ./housekeeping/makeBuild.sh -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/gcc-8_cxx17.cmake -DCOVERAGE=ON
        - name: Submit Coverage
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            ./housekeeping/codecov.sh ${BUILD_DIR} ${CODECOV_TOKEN}
          # ./housekeeping/sonar.sh

  push:
      # if: ${{ github.ref == 'master' }}
      needs: [clang-tidy, linux]
      name: "Push"
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: push
          run: |
            ls
            docker ps

