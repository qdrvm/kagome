sudo: true

language: cpp

git:
  depth: 1

branches:
  except:
    - /^feature.*/

dist: xenial

env:
  global:
    - CTEST_OUTPUT_ON_FAILURE=1
    # CODECOV_TOKEN
    - secure: d1396QBTHnw+4+C+6GgxNGj3zLKNIwSxbnbjRHrfsjZ46yjb0j1S8Xc2PiL88cWVS1a1sAU4K4RfmWyvl6JJrsdcRGY7hlRMbyLqQPRVHyCv8OGiA6AnFz40c+cmAEeUz0oWr4EuN8Q7YFvoXS/c2oq9njS4ib+epFFQbmpbHE+R0U1/PVLsPpFYMkAy8gp+lGX/eiEUMMJebAV3URAkJjhtLZvcYCWfhTA0zH8CiiMhQIGKs4ejWIzZVIRlC2SKxG6hnTks9bi0Al3RltGDW7VqDRH83SQ+bp/ZL77C+VooT7mS5fkWKtN7pkqtDW5FSeKj2x9QYAj0bEGkwT0CAetXyVHi3/vft1khAgNYKrzDsaOYVNiZBaX3GH3Q8RTGd08cWA1Rj5hTClhSV6IDIP1iPxCPZmzTmpGceBm9k5EmS0BynlpWy5OwBF053t73BKCY057tr3wXbZfFC58N7mC09Y3RTXAHPv2wY+ZjlfurzwjCMbJq8qD2LP6awskxx0N2WULLVUgQEN/mrRn7+U3KcFKvgMoNbHpfNFL6RffCVTVa/4ufObnXg0BhPGBmdGReOsMLKAIbAzBKbKfUQA/KD6usI6b+HHvekYG7ZyE1SBRqkR6BSQxfaMsHMCYTwHC60m8A4RRM4IL8ahdcZU354Iq+J5RLhXEDRs2GfRI=
    # GITHUB_HUNTER_TOKEN
    - secure: BExdoJVUddjS1oIPsCxnnnOmrkZ6i05ucvimNSydP1seva4gOciJJmZb9j7vUIka8NODJsuzchvupyOT86neSOP/FGnDdaK2AsvH/xr3nWRKbTBmQ+mVB3Ezw1MHe82WchfNg3lQzhAeMtuu686hnNPUyyh0jBScqZSDfCkGlhfMD2ZqqiAHSd/83xtR/AL5Zk+GoPFIOUQU8zqIPCPGQFf93rPXh89EK2jDCobQjy3/SqN0Jl4zw0hVCAlpJVx0N3Ycmhzkpwnh3POqK4GoS+/YWaDcaFcTv02dd02YL5sT9Reko2EstG5Wp2eODW4tMYEGNbSC69XU6KdbSnuXWXSZNpX3Ee9UbA5JPLhEjdZ8Reoxlr+5QYbVJMGfoffOOtqK9xp+gQ6zUbELMlcM8tqAa65KZFfzEW9slmS7tWqPlUFC1jUNZRAAcPbnvALMGWr1Y3uKmgUB1MNs/YKcA6RmUerexm5kpbIMKbCA0+c3c/DIG/+HHd22JX38ogNv0Z0ezFk3kjhT603wy8NGdwVOUzrdCVPXIg/VyvbFGudxL5NR9Vx5Dq2Ff+tCgI62QunKJmAs5VaqZg7f+DhOL4gGrw7g1YeMLF2R2HfOO1SXdMp30zRT4L2FGZOWdJs2jiYebccMFOGm4Bi7Z4Mvdq42F4+RwxPSWQJf8Eo+Mz0=
    # GITHUB_HUNTER_USERNAME
    - secure: JgAYm6GojZFLeURRtYzA/K3WCWsd2w4UIJPhafKAvhiDKsMVDS78VqIsGbPTmsLB5K1zNotmoalcE/N1JRwmii3HLgL/WtMdWh2haVmZ2r5mZVrQP1clHJb7FFSVQksx0c7gHYTuM4GPu2uEvEtbRtWF3ol/52ZPc0cRuPtHqZ4BcLGFmMVyFY5xij7MjfVW1VTT7u14tlwTBhlmWYSGIsaf/6xUNO5HamAYZOYt+vz9ihYStP11rbA2sAXcNlTR3hILho92rTe7BprkVfHYiOeOqsTHoXXQYHelWkmH+WExBvsqivdJkMldda2+oXXcUoOnKPJSZ4QWEfp/OBVW/Jpg4+jytTV6Lhg8U1RC3yj/pwgzc8G5mINN9T5LQWAmrege3X8FpPCRqQhm8WQm7vQnw5uNX8ddvUE3CIJjxqy11lDtB7ojXrUP9wPz3R1vryhmUcGEju8jTEE+MRsHMN5ziEBXWvABP9j8sW+P0f82CMuOGCDHoGKwZEfUfwg7qRjBcgwfqOGRXVClazWLfyg20F+gn8yLg5bAYCm6evJilsl5elcTvJY8Vp+Et2dbabO2Ln5XgNNyEMMB9NPx4HGPU+quuMdAu2gpAdrwmjd6cF+mDiAwYt8II2S4kSYUngKPEvCPv1pW86uuL3/6At6scW7pNOMPa5SijEgyGCc=

addons:
  homebrew:
    packages:
      - git
  apt:
    sources:
      - llvm-toolchain-xenial-8
      - ubuntu-toolchain-r-test
    packages:
      - llvm-8
      - g++-9
      - clang-8
      - git
      - python3
      - python3-pip
      - python3-setuptools
      - clang-tidy-8

cache:
  apt: true
  cargo: true
  ccache: true
  pip: true
  directories:
    - "$HOME/.ccache"
    - "$HOME/Library/Caches/Homebrew"

matrix:
  include:
    - os: osx
      name: "OSX AppleClang"
      if: type = pull_request OR branch = master
      osx_image: xcode11
      before_cache:
        - brew cleanup

    - os: linux
      name: "Linux gcc-9 clang-tidy"
      if: type = pull_request OR branch = master
      env:
        - _CC=gcc-9
        - _CXX=g++-9
      script:
        - export CC=${_CC}
        - export CXX=${_CXX}
        - export PATH="$HOME/.cargo/bin:$PATH"
        - export LLVM_ROOT=/usr/lib/llvm-8
        - export PATH=${LLVM_ROOT}/bin:${LLVM_ROOT}/share/clang:${PATH}
        - sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-8 90
        - cmake . -Bbuild
        # build only generated files, so clang-tidy will work correctly
        - cmake --build build --target generated
        - housekeeping/clang-tidy.sh build

install:
  - |
    # install python pip3 deps
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        LLVM_BIN=/usr/lib/llvm-8/bin
        if [ -d $LLVM_BIN ]; then
          export PATH="$PATH:$LLVM_BIN"
          echo "$LLVM_BIN added to PATH"
        else
          echo "$LLVM_BIN is absent"
        fi
      elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
        pip3 install --user pyyaml
      fi
    sudo python3 -m pip install --upgrade pip
    sudo python3 -m pip install scikit-build
    sudo python3 -m pip install cmake requests gitpython gcovr
  - export PATH="$HOME/.cargo/bin:$PATH"
  - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2019-10-16 --profile minimal

before_script:
  - cmake --version
  - python -V
  - python3 -V
  - pip -V
  - pip3 -V
  - gcovr --version || true
  - echo $PATH

script:
  - export CC=${_CC}
  - export CXX=${_CXX}
  - cmake . -Bbuild -DCOVERAGE=${COVERAGE:-OFF} -DCMAKE_TOOLCHAIN_FILE=${TOOLCHAIN:-cmake/toolchain/cxx17.cmake}
  - cmake --build build -- -j2
  - cmake --build build --target test
